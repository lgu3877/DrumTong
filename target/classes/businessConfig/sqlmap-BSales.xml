<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
		"-//mybatis.org//DTD Mapper 3.0//EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 사업장 매출 테이블	 -->
<mapper namespace="com.drumtong.business.dao.BSalesDAO">


<!-- 	주문현황 페이지에 필요한 구매정보 데이터를 가져와줍니다. -->
<!-- 	<select id="selectBSales"> -->
<!-- 		SELECT * FROM BSALES  -->
<!-- 			WHERE  -->
<!-- 				ESTID = #{estid} -->
<!-- 	</select> -->
<!--  주문수 통계 -->
	<select id="CountOrder" parameterType="StatisticsData" resultType="int">
		SELECT NVL(SUM(TOTALAMOUNT),0) FROM BSALES 
			WHERE 
				ESTID=#{estid} AND 
				(TO_DATE(SUBSTR(PURCHASEDATE,1,10),'YYYY-MM-DD HH24-MI-SS') BETWEEN #{startdate} AND #{enddate})
	</select>
	
<!-- 	주문금액 통계 -->
	<select id="CountPrice" parameterType="StatisticsData" resultType="int">
		SELECT NVL(SUM(TOTALPRICE),0) FROM BSALES 
			WHERE 
				ESTID=#{estid} AND 
				(TO_DATE(SUBSTR(PURCHASEDATE,1,10),'YYYY-MM-DD') BETWEEN #{startdate} AND #{enddate})
	</select>
	
<!-- 	메인 프리뷰 주문 수(요청, 처리중, 완료) 데이터 -->
	<select id="getMainPreviewOrder" parameterType="String" resultType="Hashmap">
		SELECT A.a AS REQUEST, B.b AS PROCESSING, C.c AS SUCCESS FROM 
			(SELECT NVL(COUNT(*),0) AS a FROM BSALES 
				WHERE STATUS='REQUEST' AND ESTID=#{estid}) A,
			(SELECT NVL(COUNT(*),0) AS b FROM BSALES 
				WHERE STATUS='PROCESSING' AND ESTID=#{estid}) B,
			(SELECT NVL(COUNT(*),0) AS c FROM BSALES 
				WHERE STATUS='SUCCESS' AND ESTID=#{estid}) C
	</select>
	
<!-- 	메인 프리뷰 매출(오늘, 이번주, 이번달) 데이터 -->
	<select id="getMainPreviewPrice" parameterType="String" resultType="Hashmap">
		SELECT A.a AS DAY, B.b AS WEEK, C.c AS MONTH FROM 
			(SELECT NVL(SUM(TOTALPRICE),0) AS a FROM BSALES 
				WHERE 
				SUBSTR(PURCHASEDATE,1,10) = TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
				AND ESTID=#{estid}) A,
			(SELECT NVL(SUM(TOTALPRICE),0) AS b FROM BSALES 
				WHERE TO_DATE(SUBSTR(PURCHASEDATE,1,10), 'YYYY-MM-DD') 
				BETWEEN TO_DATE(TO_CHAR(SYSDATE-6,'YYYY-MM-DD'),'YYYY-MM-DD') 
				AND SYSDATE  AND ESTID=#{estid}) B,
			(select NVL(SUM(TOTALPRICE),0) AS c FROM BSALES 
				WHERE SUBSTR(PURCHASEDATE,6,2)=TO_CHAR(SYSDATE,'MM') 
				AND ESTID=#{estid}) C
	</select>
	
<!-- 	세탁물 판매량(오늘, 이번주, 이번달) 데이터 -->
	<select id="getMainPreviewLaundry" parameterType="String" resultType="Hashmap">
		SELECT A.a AS DAY, B.b AS WEEK, C.c AS MONTH FROM 
			(SELECT NVL(SUM(TOTALAMOUNT),0) AS a FROM BSALES 
				WHERE 
				SUBSTR(PURCHASEDATE,1,10) = TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
				AND ESTID=#{estid}) A,
			(SELECT NVL(SUM(TOTALAMOUNT),0) AS b FROM BSALES 
				WHERE TO_DATE(SUBSTR(PURCHASEDATE,1,10), 'YYYY-MM-DD') 
				BETWEEN TO_DATE(TO_CHAR(SYSDATE-6,'YYYY-MM-DD'),'YYYY-MM-DD') 
				AND SYSDATE  AND ESTID=#{estid}) B,
			(select NVL(SUM(TOTALAMOUNT),0) AS c FROM BSALES 
				WHERE SUBSTR(PURCHASEDATE,6,2)=TO_CHAR(SYSDATE,'MM') 
				AND ESTID=#{estid}) C
	</select>
	
	
	<!-- 	주문 목록 데이터 Bsales에 Binformation brandnaming이 Join되어있음.
			
			해당 SQL문은 Business 주문 현황에도 사용되고
					 Customer 주문 목록에도 사용됩니다.
			
			데이터를 출력하면은 한 개의 주문에 대한 정보가 List형식으로 묶여져서 출력ㅇ됩니다.
			
			따라서 Business 주문현황에서 호출될 때는 Where 조건문을 ESTID로 데이터를 호출하고
			 	Customer 주문목록에서 호출될 때는 Where 조건문을 MemberId로 호출해서 각기 다른 데이터를 호출할 수 있게 도와줍니다.
	 -->
	<select id="selectOrderList" parameterType="hashmap" resultType="OrderList">
	SELECT
        BSALES.ESTID,
		BSALES.SALECODE, BSALES.PURCHASEDATE, BSALES.TOTALAMOUNT,
		BSALES.ORIGINALPRICE, BSALES.DISCOUNTPRICE, BSALES.TOTALPRICE,
		BSALES.STATUS,BSALES.DELIVERYDATE,
        
        BINFORMATION.BRANDNAMING
        
	FROM BSALES  
	    INNER JOIN BINFORMATION
		ON BINFORMATION.ESTID = BSALES.ESTID
	WHERE 
        <choose>
        	<when test='memberidORestid.contains("ESTID")'>
        		<if test='startDate != null and endDate != null'>
        			(TO_DATE(PURCHASEDATE, 'YYYY-MM-DD HH24:MI:SS') BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD')+0.99999) AND
        		</if>
        		BSALES.STATUS=#{status} AND BSALES.ESTID=
        	</when>
        	<otherwise>
        		BSALES.MEMBERID=
        	</otherwise>
        </choose>
        #{memberidORestid}      ORDER BY SALECODE DESC
	</select>
	
	<update id="updateOrderList">
		UPDATE BSALES SET STATUS='PROCESSING',  
			DELIVERYDATE= #{orderDate} 
				WHERE ESTID=#{estid} AND SALECODE=#{salecode}
	</update>
	
	<delete id="deleteOrderList">
		DELETE FROM BSALES WHERE ESTID=#{estid} AND SALECODE=#{salecode}
	</delete>
	
<!-- 	몇 번째 방문(이용횟수)인지 조회 -->
	<select id="visits" parameterType="hashmap" resultType="int">
		SELECT RN AS VISITS 
			FROM
				(SELECT ROWNUM AS RN, BSALES.* 
					FROM BSALES 
						WHERE MEMBERID=#{memberid} 
						AND ESTID=#{estid} 
						ORDER BY PURCHASEDATE ASC)
 			WHERE SALECODE=#{salecode}
	</select>
	
	<select id="searchSales" parameterType="String" resultType="int">
		SELECT COUNT(*)+1  
			FROM BSALES 
				WHERE ESTID=#{estid} 
				AND SUBSTR(PURCHASEDATE, 1, 10) = TO_CHAR(SYSDATE,'YYYY-MM-DD')
	</select>
	
	<insert id="insert" parameterType="BSalesVO">
		insert into bsales 
			(memberid, estid, salecode, totalamount, originalprice, discountprice, totalprice, deliverydate, collectiondate, collectionboolean, deliveryboolean, collectionrequests, laundryrequests, deliveryrequests)
				values
			(#{memberid}, #{estid}, #{salecode}, #{totalamount}, #{originalprice}, #{discountprice}, #{totalprice}, #{deliverydate}, #{collectiondate}, #{collectionboolean}, #{deliveryboolean}, #{collectionrequests}, #{laundryrequests}, #{deliveryrequests})
	</insert>
</mapper>
