<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
		<property name="maxInMemorySize" value="10485760" />
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.0.51:2522:xe" />
		<property name="user" value="laundry" />
		<property name="password" value="drumtong" />
		<property name="maxPoolSize" value="100" />
		<property name="maxIdleTime" value="600" />
		<property name="idleConnectionTestPeriod" value="300" />
		<property name="checkoutTimeout" value="5000" />
	</bean>


<!-- ===============================MyBatis======================================= -->


<!-- 	business mybatis -->
	<bean id="businessFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:businessConfig/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:businessConfig/sqlmap-**.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="businessTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg ref="businessFactory" />
	</bean>


<!-- 	customer mybatis	 -->
	<bean id="customerFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:customerConfig/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:customerConfig/sqlmap-**</value>
<!-- 				<value>classpath:customerConfig/sqlmap-CCustomer.xml</value> -->
<!-- 				<value>classpath:customerConfig/sqlmap-CPayment.xml</value> -->
<!-- 				<value>classpath:customerConfig/sqlmap-CPrivateData.xml</value> -->
			</list>
		</property>
	</bean>
	
	<bean id="customerTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg ref="customerFactory" />
	</bean>

<!-- 	system mybatis	 -->
	<bean id="systemFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:systemConfig/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:systemConfig/sqlmap-**</value>
			</list>
		</property>
	</bean>
	
	<bean id="systemTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg ref="systemFactory" />
	</bean>
	
	
	
<!-- ===============================transaction======================================= -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 트랜잭션에 관련된 어노테이션을 활성화한다 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
		

<!-- ===============================Package Configuration======================================= -->
	
	
<!-- 		[exception 설정] -->
<!-- 		<context:component-scan base-package="com.laundry.business.exception" /> -->
<!-- 		<context:component-scan base-package="com.laundry.customer.exception" /> -->


<!-- 		[service 전역 설정] -->
	<context:component-scan base-package="com.drumtong.business.service.*" />
	<context:component-scan base-package="com.drumtong.customer.service.*" />
		
<!-- 		[mybatis dao 전역 설정] -->
	<mybatis-spring:scan base-package="com.drumtong.business.dao" factory-ref="businessFactory"/>
	<mybatis-spring:scan base-package="com.drumtong.customer.dao" factory-ref="customerFactory"/>
	<mybatis-spring:scan base-package="com.drumtong.system.dao" factory-ref="systemFactory"/>


</beans>







